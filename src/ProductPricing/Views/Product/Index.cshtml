@model ProductPricing.Controllers.Helpers.PaginatedList<ProductPricing.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
<!--
<p>
    <a asp-action="Create">Create New</a>
</p>
    -->

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Product,Plan or Type : <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Product ID
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ProductSortParm" asp-route-currentFilter=@ViewBag.CurrentFilter>Product Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PlanSortParm">Plan Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ProductTypeSortParm">Product Type</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ConditionSortParm">Condition</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.FamilySortParm">Family Composition Id</a>
            </th>
            <th>
                Family Composition Description
            </th>
            <th>
                
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlanName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FamilyCompositionId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FamilyComposition.Text)
            </td>

            
            <td>
           <!--<a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
               <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a> -->
               <a asp-action="Details" asp-route-id="@item.ProductId">Details</a>
                
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn">
    Next
</a>
